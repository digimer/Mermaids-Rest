ARM GAS  /tmp/cc7wkfh7.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"ioctl.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/ioctl.c"
  18              		.section	.text.ioctl_init,"ax",%progbits
  19              		.align	1
  20              		.global	ioctl_init
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	ioctl_init:
  26              	.LFB40:
   1:Core/Src/ioctl.c **** /* USER CODE BEGIN Header */
   2:Core/Src/ioctl.c **** /**
   3:Core/Src/ioctl.c ****   ******************************************************************************
   4:Core/Src/ioctl.c ****   * @file           : ioctl.c
   5:Core/Src/ioctl.c ****   * @brief          : I/O Control Setup
   6:Core/Src/ioctl.c ****   ******************************************************************************
   7:Core/Src/ioctl.c ****   * @attention
   8:Core/Src/ioctl.c ****   *
   9:Core/Src/ioctl.c ****   * Copyright (c) 2024 The Digital Mermaid.
  10:Core/Src/ioctl.c ****   * All rights reserved.
  11:Core/Src/ioctl.c ****   *
  12:Core/Src/ioctl.c ****   * This software is licensed under the GPL v3, the terms can be found in the 
  13:Core/Src/ioctl.c ****   * LICENSE file in the root directory of this software component.
  14:Core/Src/ioctl.c ****   *
  15:Core/Src/ioctl.c ****   ******************************************************************************
  16:Core/Src/ioctl.c ****   */
  17:Core/Src/ioctl.c **** 
  18:Core/Src/ioctl.c **** #include "main.h"
  19:Core/Src/ioctl.c **** #include "ioctl.h"
  20:Core/Src/ioctl.c **** #include "config.h"
  21:Core/Src/ioctl.c **** 
  22:Core/Src/ioctl.c **** extern ADC_HandleTypeDef hadc;
  23:Core/Src/ioctl.c **** 
  24:Core/Src/ioctl.c **** struct ioctl_state {
  25:Core/Src/ioctl.c ****   uint16_t adc_raw_vals[ADC_NUM_CHANS];
  26:Core/Src/ioctl.c ****   uint16_t pot_vals[ADC_NUM_CHANS];
  27:Core/Src/ioctl.c **** };
  28:Core/Src/ioctl.c **** 
  29:Core/Src/ioctl.c **** struct ioctl_state ios;
  30:Core/Src/ioctl.c **** 
  31:Core/Src/ioctl.c **** void ioctl_init(void) {
  27              		.loc 1 31 23 view -0
ARM GAS  /tmp/cc7wkfh7.s 			page 2


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  32:Core/Src/ioctl.c ****   int i;
  36              		.loc 1 32 3 view .LVU1
  33:Core/Src/ioctl.c ****   for(i = 0; i < ADC_NUM_CHANS; i++) {
  37              		.loc 1 33 3 view .LVU2
  38              	.LVL0:
  39              		.loc 1 33 9 is_stmt 0 view .LVU3
  40 0002 0022     		movs	r2, #0
  41              		.loc 1 33 3 view .LVU4
  42 0004 05E0     		b	.L2
  43              	.LVL1:
  44              	.L3:
  34:Core/Src/ioctl.c ****     ios.pot_vals[i] = 0;
  45              		.loc 1 34 5 is_stmt 1 view .LVU5
  46              		.loc 1 34 21 is_stmt 0 view .LVU6
  47 0006 074B     		ldr	r3, .L4
  48 0008 5100     		lsls	r1, r2, #1
  49 000a 5B18     		adds	r3, r3, r1
  50 000c 0021     		movs	r1, #0
  51 000e 9980     		strh	r1, [r3, #4]
  33:Core/Src/ioctl.c ****   for(i = 0; i < ADC_NUM_CHANS; i++) {
  52              		.loc 1 33 34 is_stmt 1 discriminator 3 view .LVU7
  53 0010 0132     		adds	r2, r2, #1
  54              	.LVL2:
  55              	.L2:
  33:Core/Src/ioctl.c ****   for(i = 0; i < ADC_NUM_CHANS; i++) {
  56              		.loc 1 33 16 discriminator 1 view .LVU8
  57 0012 012A     		cmp	r2, #1
  58 0014 F7DD     		ble	.L3
  35:Core/Src/ioctl.c ****   }
  36:Core/Src/ioctl.c ****   HAL_ADC_Start_DMA(&hadc, (uint32_t *)ios.adc_raw_vals, ADC_NUM_CHANS);
  59              		.loc 1 36 3 view .LVU9
  60 0016 0349     		ldr	r1, .L4
  61 0018 0348     		ldr	r0, .L4+4
  62 001a 0222     		movs	r2, #2
  63              	.LVL3:
  64              		.loc 1 36 3 is_stmt 0 view .LVU10
  65 001c FFF7FEFF 		bl	HAL_ADC_Start_DMA
  66              	.LVL4:
  37:Core/Src/ioctl.c **** }
  67              		.loc 1 37 1 view .LVU11
  68              		@ sp needed
  69 0020 10BD     		pop	{r4, pc}
  70              	.L5:
  71 0022 C046     		.align	2
  72              	.L4:
  73 0024 00000000 		.word	ios
  74 0028 00000000 		.word	hadc
  75              		.cfi_endproc
  76              	.LFE40:
ARM GAS  /tmp/cc7wkfh7.s 			page 3


  78              		.section	.text.ioctl_timer_task,"ax",%progbits
  79              		.align	1
  80              		.global	ioctl_timer_task
  81              		.syntax unified
  82              		.code	16
  83              		.thumb_func
  85              	ioctl_timer_task:
  86              	.LFB41:
  38:Core/Src/ioctl.c **** 
  39:Core/Src/ioctl.c **** // run the timer task
  40:Core/Src/ioctl.c **** void ioctl_timer_task(void) {
  87              		.loc 1 40 29 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 10B5     		push	{r4, lr}
  92              	.LCFI1:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  41:Core/Src/ioctl.c ****     // restart ADC
  42:Core/Src/ioctl.c ****     if(HAL_ADC_GetState(&hadc) == HAL_ADC_STATE_READY) {
  96              		.loc 1 42 5 view .LVU13
  97              		.loc 1 42 8 is_stmt 0 view .LVU14
  98 0002 0648     		ldr	r0, .L9
  99 0004 FFF7FEFF 		bl	HAL_ADC_GetState
 100              	.LVL5:
 101              		.loc 1 42 7 discriminator 1 view .LVU15
 102 0008 0128     		cmp	r0, #1
 103 000a 00D0     		beq	.L8
 104              	.L6:
  43:Core/Src/ioctl.c ****         HAL_ADC_Start_DMA(&hadc, (uint32_t *)ios.adc_raw_vals, ADC_NUM_CHANS);
  44:Core/Src/ioctl.c ****     }
  45:Core/Src/ioctl.c **** }
 105              		.loc 1 45 1 view .LVU16
 106              		@ sp needed
 107 000c 10BD     		pop	{r4, pc}
 108              	.L8:
  43:Core/Src/ioctl.c ****         HAL_ADC_Start_DMA(&hadc, (uint32_t *)ios.adc_raw_vals, ADC_NUM_CHANS);
 109              		.loc 1 43 9 is_stmt 1 view .LVU17
 110 000e 0449     		ldr	r1, .L9+4
 111 0010 0248     		ldr	r0, .L9
 112 0012 0222     		movs	r2, #2
 113 0014 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 114              	.LVL6:
 115              		.loc 1 45 1 is_stmt 0 view .LVU18
 116 0018 F8E7     		b	.L6
 117              	.L10:
 118 001a C046     		.align	2
 119              	.L9:
 120 001c 00000000 		.word	hadc
 121 0020 00000000 		.word	ios
 122              		.cfi_endproc
 123              	.LFE41:
 125              		.section	.text.ioctl_get_pot,"ax",%progbits
 126              		.align	1
 127              		.global	ioctl_get_pot
ARM GAS  /tmp/cc7wkfh7.s 			page 4


 128              		.syntax unified
 129              		.code	16
 130              		.thumb_func
 132              	ioctl_get_pot:
 133              	.LVL7:
 134              	.LFB42:
  46:Core/Src/ioctl.c **** 
  47:Core/Src/ioctl.c **** // Get the requested pot value
  48:Core/Src/ioctl.c **** uint16_t ioctl_get_pot(uint8_t chan) {
 135              		.loc 1 48 38 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
  49:Core/Src/ioctl.c ****   if (chan >= IOCTL_NUM_POTS) {
 140              		.loc 1 49 3 view .LVU20
 141              		.loc 1 49 6 is_stmt 0 view .LVU21
 142 0000 0128     		cmp	r0, #1
 143 0002 04D8     		bhi	.L13
  50:Core/Src/ioctl.c ****     return 0;
  51:Core/Src/ioctl.c ****   }
  52:Core/Src/ioctl.c ****   return ios.pot_vals[chan];
 144              		.loc 1 52 3 is_stmt 1 view .LVU22
 145              		.loc 1 52 22 is_stmt 0 view .LVU23
 146 0004 034B     		ldr	r3, .L14
 147 0006 4000     		lsls	r0, r0, #1
 148              	.LVL8:
 149              		.loc 1 52 22 view .LVU24
 150 0008 1B18     		adds	r3, r3, r0
 151 000a 9888     		ldrh	r0, [r3, #4]
 152              	.L12:
  53:Core/Src/ioctl.c **** }
 153              		.loc 1 53 1 view .LVU25
 154              		@ sp needed
 155 000c 7047     		bx	lr
 156              	.LVL9:
 157              	.L13:
  50:Core/Src/ioctl.c ****     return 0;
 158              		.loc 1 50 12 view .LVU26
 159 000e 0020     		movs	r0, #0
 160              	.LVL10:
  50:Core/Src/ioctl.c ****     return 0;
 161              		.loc 1 50 12 view .LVU27
 162 0010 FCE7     		b	.L12
 163              	.L15:
 164 0012 C046     		.align	2
 165              	.L14:
 166 0014 00000000 		.word	ios
 167              		.cfi_endproc
 168              	.LFE42:
 170              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 171              		.align	1
 172              		.global	HAL_ADC_ConvCpltCallback
 173              		.syntax unified
 174              		.code	16
 175              		.thumb_func
 177              	HAL_ADC_ConvCpltCallback:
ARM GAS  /tmp/cc7wkfh7.s 			page 5


 178              	.LVL11:
 179              	.LFB43:
  54:Core/Src/ioctl.c **** 
  55:Core/Src/ioctl.c **** //
  56:Core/Src/ioctl.c **** // Callbacks
  57:Core/Src/ioctl.c **** //
  58:Core/Src/ioctl.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc) {
 180              		.loc 1 58 56 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
  59:Core/Src/ioctl.c ****   int i;
 185              		.loc 1 59 3 view .LVU29
  60:Core/Src/ioctl.c ****   for(i = 0; i < ADC_NUM_CHANS; i++) {
 186              		.loc 1 60 3 view .LVU30
 187              		.loc 1 60 9 is_stmt 0 view .LVU31
 188 0000 0022     		movs	r2, #0
 189              		.loc 1 60 3 view .LVU32
 190 0002 05E0     		b	.L17
 191              	.LVL12:
 192              	.L18:
  61:Core/Src/ioctl.c ****     ios.pot_vals[i] = ios.adc_raw_vals[i];
 193              		.loc 1 61 5 is_stmt 1 view .LVU33
 194              		.loc 1 61 39 is_stmt 0 view .LVU34
 195 0004 044B     		ldr	r3, .L19
 196 0006 5100     		lsls	r1, r2, #1
 197 0008 C85A     		ldrh	r0, [r1, r3]
 198              		.loc 1 61 21 view .LVU35
 199 000a 5B18     		adds	r3, r3, r1
 200 000c 9880     		strh	r0, [r3, #4]
  60:Core/Src/ioctl.c ****   for(i = 0; i < ADC_NUM_CHANS; i++) {
 201              		.loc 1 60 34 is_stmt 1 discriminator 3 view .LVU36
 202 000e 0132     		adds	r2, r2, #1
 203              	.LVL13:
 204              	.L17:
  60:Core/Src/ioctl.c ****   for(i = 0; i < ADC_NUM_CHANS; i++) {
 205              		.loc 1 60 16 discriminator 1 view .LVU37
 206 0010 012A     		cmp	r2, #1
 207 0012 F7DD     		ble	.L18
  62:Core/Src/ioctl.c ****   }
  63:Core/Src/ioctl.c **** }
 208              		.loc 1 63 1 is_stmt 0 view .LVU38
 209              		@ sp needed
 210 0014 7047     		bx	lr
 211              	.L20:
 212 0016 C046     		.align	2
 213              	.L19:
 214 0018 00000000 		.word	ios
 215              		.cfi_endproc
 216              	.LFE43:
 218              		.global	ios
 219              		.section	.bss.ios,"aw",%nobits
 220              		.align	2
 223              	ios:
 224 0000 00000000 		.space	8
 224      00000000 
ARM GAS  /tmp/cc7wkfh7.s 			page 6


 225              		.text
 226              	.Letext0:
 227              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 228              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 229              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 230              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 231              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 232              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 233              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 234              		.file 9 "Core/Inc/ioctl.h"
ARM GAS  /tmp/cc7wkfh7.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 ioctl.c
     /tmp/cc7wkfh7.s:19     .text.ioctl_init:00000000 $t
     /tmp/cc7wkfh7.s:25     .text.ioctl_init:00000000 ioctl_init
     /tmp/cc7wkfh7.s:73     .text.ioctl_init:00000024 $d
     /tmp/cc7wkfh7.s:223    .bss.ios:00000000 ios
     /tmp/cc7wkfh7.s:79     .text.ioctl_timer_task:00000000 $t
     /tmp/cc7wkfh7.s:85     .text.ioctl_timer_task:00000000 ioctl_timer_task
     /tmp/cc7wkfh7.s:120    .text.ioctl_timer_task:0000001c $d
     /tmp/cc7wkfh7.s:126    .text.ioctl_get_pot:00000000 $t
     /tmp/cc7wkfh7.s:132    .text.ioctl_get_pot:00000000 ioctl_get_pot
     /tmp/cc7wkfh7.s:166    .text.ioctl_get_pot:00000014 $d
     /tmp/cc7wkfh7.s:171    .text.HAL_ADC_ConvCpltCallback:00000000 $t
     /tmp/cc7wkfh7.s:177    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
     /tmp/cc7wkfh7.s:214    .text.HAL_ADC_ConvCpltCallback:00000018 $d
     /tmp/cc7wkfh7.s:220    .bss.ios:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Start_DMA
hadc
HAL_ADC_GetState
